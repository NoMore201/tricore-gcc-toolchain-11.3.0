FROM tricore-linux-builder

ARG PREFIX=/tricore
ARG LINUX_PREFIX=/tricore-linux
ARG WIN32_HOST_ARCH=x86_64-w64-mingw32
ARG LINUX_HOST_ARCH=x86_64-linux-gnu
ARG BINUTILS_VERSION=2.42
ARG GMP_VERSION=6.3.0
ARG MINGW_VERSION=11.0.1
ARG MPC_VERSION=1.3.1
ARG MPFR_VERSION=4.2.1
ARG GCC_VERSION=13.2.0
ARG CFLAGS="-Os"
ARG CXXFLAGS="-Os"
ARG LDFLAGS="-static -s"

WORKDIR /

RUN mv /tricore /tricore-linux

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install --yes --no-install-recommends \
    build-essential curl libgmp-dev libmpc-dev libmpfr-dev m4 zip flex bison texinfo

# Download, verify, and unpack

RUN curl --insecure --location --remote-name-all --remote-header-name \
    https://ftp.gnu.org/gnu/binutils/binutils-$BINUTILS_VERSION.tar.xz \
    https://ftp.gnu.org/gnu/gcc/gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz \
    https://ftp.gnu.org/gnu/gmp/gmp-$GMP_VERSION.tar.xz \
    https://ftp.gnu.org/gnu/mpc/mpc-$MPC_VERSION.tar.gz \
    https://ftp.gnu.org/gnu/mpfr/mpfr-$MPFR_VERSION.tar.xz \
    https://downloads.sourceforge.net/project/mingw-w64/mingw-w64/mingw-w64-release/mingw-w64-v$MINGW_VERSION.tar.bz2

RUN tar xJf gmp-$GMP_VERSION.tar.xz \
    && tar xJf binutils-$BINUTILS_VERSION.tar.xz \
    && tar xJf gcc-$GCC_VERSION.tar.xz \
    && tar xzf mpc-$MPC_VERSION.tar.gz \
    && tar xJf mpfr-$MPFR_VERSION.tar.xz \
    && tar xjf mingw-w64-v$MINGW_VERSION.tar.bz2

#################################################################
#
# Build Windows MinGW cross-compiler and host dependencies
#
#################################################################


WORKDIR /binutils-$BINUTILS_VERSION
RUN sed -ri 's/(static bool insert_timestamp = )/\1!/' ld/emultempl/pe*.em
WORKDIR /x-binutils
RUN /binutils-$BINUTILS_VERSION/configure \
        --prefix=/bootstrap \
        --with-sysroot=/bootstrap/$WIN32_HOST_ARCH \
        --target=$WIN32_HOST_ARCH \
        --disable-nls \
        --with-static-standard-libraries \
        --disable-multilib \
 && make MAKEINFO=true -j$(nproc) \
 && make MAKEINFO=true install

# Fixes i686 Windows XP regression
# https://sourceforge.net/p/mingw-w64/bugs/821/
RUN sed -i /OpenThreadToken/d /mingw-w64-v$MINGW_VERSION/mingw-w64-crt/lib32/kernel32.def

WORKDIR /x-mingw-headers
RUN /mingw-w64-v$MINGW_VERSION/mingw-w64-headers/configure \
        --prefix=/bootstrap/$WIN32_HOST_ARCH \
        --host=$WIN32_HOST_ARCH \
        --with-default-msvcrt=msvcrt-os \
 && make -j$(nproc) \
 && make install

WORKDIR /bootstrap
RUN ln -s $WIN32_HOST_ARCH mingw

WORKDIR /x-gcc
RUN /gcc-$GCC_VERSION/configure \
        --prefix=/bootstrap \
        --with-sysroot=/bootstrap \
        --target=$WIN32_HOST_ARCH \
        --enable-static \
        --disable-shared \
        --with-pic \
        --enable-languages=c,c++ \
        --enable-libgomp \
        --enable-threads=posix \
        --enable-version-specific-runtime-libs \
        --disable-dependency-tracking \
        --disable-nls \
        --disable-lto \
        --disable-multilib \
        CFLAGS_FOR_TARGET="-Os" \
        CXXFLAGS_FOR_TARGET="-Os" \
        LDFLAGS_FOR_TARGET="-s" \
        CFLAGS="-Os" \
        CXXFLAGS="-Os" \
        LDFLAGS="-s" \
 && make -j$(nproc) all-gcc \
 && make install-gcc

ENV PATH="/bootstrap/bin:${PATH}"

WORKDIR /x-mingw-crt
RUN /mingw-w64-v$MINGW_VERSION/mingw-w64-crt/configure \
        --prefix=/bootstrap/$WIN32_HOST_ARCH \
        --with-sysroot=/bootstrap/$WIN32_HOST_ARCH \
        --host=$WIN32_HOST_ARCH \
        --with-default-msvcrt=msvcrt-os \
        --disable-dependency-tracking \
        --disable-lib32 \
        --enable-lib64 \
        CFLAGS="-Os" \
        LDFLAGS="-s" \
 && make -j$(nproc) \
 && make install

WORKDIR /x-winpthreads
RUN /mingw-w64-v$MINGW_VERSION/mingw-w64-libraries/winpthreads/configure \
        --prefix=/bootstrap/$WIN32_HOST_ARCH \
        --with-sysroot=/bootstrap/$WIN32_HOST_ARCH \
        --host=$WIN32_HOST_ARCH \
        --enable-static \
        --disable-shared \
        CFLAGS="-Os" \
        LDFLAGS="-s" \
 && make -j$(nproc) \
 && make install

WORKDIR /x-gcc
RUN make -j$(nproc) \
 && make install

WORKDIR /gmp
RUN /gmp-$GMP_VERSION/configure \
    --prefix=/bootstrap \
    --host=$WIN32_HOST_ARCH \
    --disable-assembly \
    --enable-static \
    --disable-shared \
    CFLAGS="$CFLAGS"\
    CXXFLAGS="$CXXFLAGS"\
    LDFLAGS="$LDFLAGS" \
    && make -j$(nproc) \
    && make install

WORKDIR /mpfr
RUN /mpfr-$MPFR_VERSION/configure \
    --prefix=/bootstrap \
    --host=$WIN32_HOST_ARCH \
    --with-gmp-include=/bootstrap/include \
    --with-gmp-lib=/bootstrap/lib \
    --enable-static \
    --disable-shared \
    CFLAGS="$CFLAGS"\
    LDFLAGS="$LDFLAGS" \
    && make -j$(nproc) \
    && make install

WORKDIR /mpc
RUN /mpc-$MPC_VERSION/configure \
    --prefix=/bootstrap \
    --host=$WIN32_HOST_ARCH \
    --with-gmp-include=/bootstrap/include \
    --with-gmp-lib=/bootstrap/lib \
    --with-mpfr-include=/bootstrap/include \
    --with-mpfr-lib=/bootstrap/lib \
    --enable-static \
    --disable-shared \
    CFLAGS="$CFLAGS"\
    LDFLAGS="$LDFLAGS" \
    && make -j$(nproc) \
    && make install


# #################################################################
# #
# # Build Tricore cross-compiler for Windows using MinGW cross-compiler
# #
# #################################################################

WORKDIR /tricore-build/binutils-mcs-win
RUN /tricore-src/tricore-binutils-gdb/configure \
    LDFLAGS="$LDFLAGS" \
    --host=$WIN32_HOST_ARCH \
    --build=${LINUX_HOST_ARCH} \
    --target=mcs-elf \
    --program-prefix=mcs-elf- \
    --disable-threads \
    --disable-nls \
    --disable-itcl \
    --disable-tk \
    --disable-tcl \
    --disable-winsup \
    --disable-gdbtk \
    --disable-libgui \
    --disable-rda \
    --disable-sid \
    --disable-sim \
    --disable-gdb \
    --disable-newlib \
    --disable-libgloss \
    --disable-test-suite \
    --enable-checking=release \
    --with-gnu-ld \
    --with-gnu-as \
    --prefix=$PREFIX \
    --disable-werror && \
    make MAKEINFO=true -j$(nproc) && \
    make MAKEINFO=true -j$(nproc) install

WORKDIR /tricore-build/binutils-win
RUN /tricore-src/tricore-binutils-gdb/configure \
    LDFLAGS="$LDFLAGS" \
    --host=$WIN32_HOST_ARCH \
    --build=$LINUX_HOST_ARCH \
    --target=tricore-elf \
	--enable-targets=mcs-elf \
    --program-prefix=tricore-elf- \
    --disable-threads \
    --disable-nls \
    --disable-itcl \
    --disable-tk \
    --disable-tcl \
    --disable-winsup \
    --disable-gdbtk \
    --disable-libgui \
    --disable-rda \
    --disable-sid \
    --disable-sim \
    --disable-gdb \
    --disable-newlib \
    --disable-libgloss \
    --disable-test-suite \
    --enable-checking=release \
    --with-gnu-ld \
    --with-gnu-as \
    --prefix=$PREFIX \
    --disable-werror && \
    make MAKEINFO=true -j$(nproc) && \
    make MAKEINFO=true -j$(nproc) install

ENV PATH="/tricore-linux/bin:$PATH"

WORKDIR /tricore-build/gcc-stage1-win
COPY docker/0001* /tricore-src/tricore-gcc/
RUN cat /tricore-src/tricore-gcc/0001*.patch | patch -d/tricore-src/tricore-gcc/ -p1 \
    && /tricore-src/tricore-gcc/configure \
    LDFLAGS="$LDFLAGS" \
    CFLAGS_FOR_TARGET="$CFLAGS" \
    CXXFLAGS_FOR_TARGET="$CXXFLAGS" \
    --target=tricore-elf \
    --host=$WIN32_HOST_ARCH \
    --build=$LINUX_HOST_ARCH \
    --enable-lib32 \
    --disable-lib64 \
    --prefix=$PREFIX \
    --enable-languages=c,c++ \
    --enable-libstdcxx-debug-flags="-gdwarf-3 -g -O0 -D_GLIBCXX_ASSERTIONS" \
    --enable-c99 \
    --enable-long-long \
    --enable-checking \
    --disable-nls \
    --enable-static \
    --disable-threads \
    --disable-shared \
    --with-headers=yes \
    --with-newlib=yes \
    --with-gmp=/bootstrap \
    --with-mpfr=/bootstrap \
    --with-mpc=/bootstrap \
    --enable-mingw-wildcard \
    --disable-libstdcxx-pch \
    --enable-newlib-elix-level=3 \
    --enable-newlib-io-long-long \
    --disable-newlib-supplied-syscalls \
    --disable-libssp \
    --disable-test-suite \
    && make MAKEINFO=true -j$(nproc) all-gcc \
    && make MAKEINFO=true install-gcc

WORKDIR /tricore-build/newlib-mingw
RUN /tricore-src/tricore-newlib-cygwin/configure \
    CC_FOR_TARGET=$LINUX_PREFIX/bin/tricore-elf-gcc \
    CXX_FOR_TARGET=$LINUX_PREFIX/bin/tricore-elf-c++ \
    GCC_FOR_TARGET=$LINUX_PREFIX/bin/tricore-elf-gcc \
    AR_FOR_TARGET=$LINUX_PREFIX/bin/tricore-elf-ar \
    AS_FOR_TARGET=$LINUX_PREFIX/bin/tricore-elf-as \
    LD_FOR_TARGET=$LINUX_PREFIX/bin/tricore-elf-ld \
    NM_FOR_TARGET=$LINUX_PREFIX/bin/tricore-elf-nm \
    OBJDUMP_FOR_TARGET=$LINUX_PREFIX/bin/tricore-elf-objdump \
    RANLIB_FOR_TARGET=$LINUX_PREFIX/bin/tricore-elf-ranlib \
    STRIP_FOR_TARGET=$LINUX_PREFIX/bin/tricore-elf-strip \
    READELF_FOR_TARGET=$LINUX_PREFIX/bin/tricore-elf-readelf \
    CFLAGS_FOR_TARGET="$CFLAGS -ffunction-sections -mfast-div -fno-common" \
    CXXFLAGS_FOR_TARGET="$CXXFLAGS -ffunction-sections -mfast-div -fno-common" \
    --target=tricore-elf \
    --host=i686-w64-mingw32 \
    --build=i686-pc-mingw32 \
    --prefix=$PREFIX \
    && make -j$(nproc) LDFLAGS="-static" \
    && make install

WORKDIR /tricore-build/gcc-stage2-mingw
RUN /tricore-src/tricore-gcc/configure \
    LDFLAGS="$LDFLAGS" \
    CFLAGS="$CFLAGS" \
    CXXFLAGS="$CXXFLAGS" \
    CFLAGS_FOR_TARGET="$CFLAGS" \
    CXXFLAGS_FOR_TARGET="$CXXFLAGS" \
    --target=tricore-elf \
    --host=$WIN32_HOST_ARCH \
    --build=$LINUX_HOST_ARCH \
    --enable-lib32 \
    --disable-lib64 \
    --prefix=$PREFIX \
    --enable-languages=c,c++ \
    --enable-libstdcxx-debug-flags="-gdwarf-3 -g -O0 -D_GLIBCXX_ASSERTIONS" \
    --enable-c99 \
    --enable-long-long \
    --enable-checking \
    --disable-nls \
    --enable-static \
    --disable-threads \
    --disable-shared \
    --with-headers=yes \
    --with-newlib=yes \
    --with-gnu-ld \
    --with-gnu-as \
    --with-gmp=/bootstrap \
    --with-mpfr=/bootstrap \
    --with-mpc=/bootstrap \
    --enable-mingw-wildcard \
    --disable-libstdcxx-pch \
    --enable-newlib-elix-level=3 \
    --enable-newlib-io-long-long \
    --disable-newlib-supplied-syscalls \
    --disable-libssp \
    --disable-test-suite \
    && make MAKEINFO=true -j$(nproc) \
    && make MAKEINFO=true install

ENV PREFIX=${PREFIX}
CMD zip -q9Xr - $PREFIX